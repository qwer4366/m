version: '3.8'

services:
  mu3-killer-piaaz:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: mu3-killer-piaaz-app
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=1024
    volumes:
      # Mount SSL certificates (uncomment for HTTPS)
      # - ./ssl:/etc/nginx/ssl:ro
      # Mount custom nginx config if needed
      # - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Mount logs for debugging
      - nginx-logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - mu3-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mu3-killer-piaaz.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.mu3-killer-piaaz.tls=true"
      - "traefik.http.routers.mu3-killer-piaaz.tls.certresolver=letsencrypt"

  # Optional: Add a reverse proxy like Traefik
  # traefik:
  #   image: traefik:v2.10
  #   container_name: traefik
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
  #     - "--certificatesresolvers.letsencrypt.acme.email=your-email@example.com"
  #     - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     - "8080:8080"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - letsencrypt:/letsencrypt
  #   networks:
  #     - mu3-network

  # Optional: Add monitoring with Prometheus
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #   networks:
  #     - mu3-network

  # Optional: Add Grafana for visualization
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   networks:
  #     - mu3-network

networks:
  mu3-network:
    driver: bridge
    name: mu3-killer-piaaz-network

volumes:
  nginx-logs:
    name: mu3-nginx-logs
  # letsencrypt:
  #   name: mu3-letsencrypt
  # prometheus-data:
  #   name: mu3-prometheus-data
  # grafana-data:
  #   name: mu3-grafana-data